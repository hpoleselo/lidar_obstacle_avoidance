<?xml version="1.0"?>
<launch>

  <arg name="world_name" default="$(find lar_gazebo)/worlds/lar.world"/>
  <arg name="livox_sensor" default="$(find livox_laser_simulation)/urdf/livox_mid70.xacro" />
  <param name="sensor_description" command="$(find xacro)/xacro --inorder $(arg livox_sensor)" />

  <!-- Comment this section out when just testing the URDF -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="true"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- Lauches Husky -->
  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
  </include>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model livox_lidar -param sensor_description" />
  
  <!-- Publishes Static Transform to Create TF Tree -->
  <!-- Commenting this out because a dynamic transformation is needed between livox or livox_base and cluster frame_ids -->
  <!-- That will be done programatically in the package -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="static_sphere_tf_publisher" args="0 0 0 0 0 0 1 laser_livox cluster 50"/>  -->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find livox_laser_simulation)/rviz/livox_simulation.rviz"/>

  <!-- Custom frame_id transformer from livox to cluster identified by HDBSCAN -->
  <node pkg="husky_with_livox" name="livox_to_cluster_transformer" type="livox_to_cluster_transform.py"/> 

</launch>
